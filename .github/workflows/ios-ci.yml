name: iOS CI/CD

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Cache CocoaPods
      uses: actions/cache@v3
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-
    
    - name: Install CocoaPods dependencies
      run: |
        if [ -f Podfile ]; then
          pod install
        fi
    
    - name: Cache Swift Package Manager
      uses: actions/cache@v3
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Build app
      run: |
        xcodebuild -workspace YourApp.xcworkspace \
          -scheme YourApp \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -configuration Debug \
          build
    
    - name: Run tests
      run: |
        xcodebuild -workspace YourApp.xcworkspace \
          -scheme YourApp \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -configuration Debug \
          test
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: build/reports/

  lint:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install SwiftLint
      run: brew install swiftlint
    
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging

  security-scan:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run security scan
      run: |
        # Add your security scanning tools here
        # Example: MobSF, or custom security checks
        echo "Running security checks..."

  # Optional: Archive build for distribution
  archive:
    runs-on: macos-latest
    needs: [build-and-test, lint]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install CocoaPods dependencies
      run: |
        if [ -f Podfile ]; then
          pod install
        fi
    
    - name: Build and archive
      run: |
        xcodebuild -workspace YourApp.xcworkspace \
          -scheme YourApp \
          -configuration Release \
          -archivePath build/YourApp.xcarchive \
          archive
    
    - name: Export IPA
      run: |
        xcodebuild -exportArchive \
          -archivePath build/YourApp.xcarchive \
          -exportPath build/ \
          -exportOptionsPlist ExportOptions.plist
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: ios-build
        path: build/*.ipa
